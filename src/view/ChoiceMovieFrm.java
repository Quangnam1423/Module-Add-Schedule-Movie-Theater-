/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import java.util.ArrayList;
import model.*;
import DAO.*;
import addschedule.AddSchedule;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author suong
 */
public class ChoiceMovieFrm extends javax.swing.JFrame {

    /**
     * Creates new form ChoiceMovieFrm
     */
    public ChoiceMovieFrm(AddSchedule addSchedule) {
        initComponents();
        setLocationRelativeTo(null);
        movieDao = new MovieDAO();
        array = movieDao.getAllMovie();
        this.addSchedule = addSchedule;
        defaultTableModel = new DefaultTableModel(){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
            
        };
        Table.setModel(defaultTableModel);
        
        defaultTableModel.addColumn("Mã Phim");
        defaultTableModel.addColumn("Tên Phim");
        defaultTableModel.addColumn("Mô Tả");
        defaultTableModel.addColumn("Thời Lượng");
        defaultTableModel.addColumn("Ngôn Ngữ");
        defaultTableModel.addColumn("Điểm Đánh Giá");
        
        for (Movie x : array)
        {
            defaultTableModel.addRow(new Object[]{
                        x.getMovieId() , x.getMovieName() , x.getDescript() , x.getMovieLength() , x.getMovieLanguage() , 
                        x.getRating()
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        anouncement = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        SubmitButton = new javax.swing.JButton();
        ReturnButton = new javax.swing.JButton();
        MovieNameField = new javax.swing.JTextField();
        RatingMovie = new javax.swing.JTextField();
        Refresh = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        anouncement.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        anouncement.setText("Vui lòng chọn một bộ phim bên dưới!");

        Table.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Phim", "Tên Phim", "Mô Tả", "Thời Lượng", "Ngôn Ngữ", "Điểm Đánh giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.Float.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        Table.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        Table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(Table);

        SubmitButton.setText("Xác Nhận");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        ReturnButton.setText("Quay Lại");
        ReturnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnButtonActionPerformed(evt);
            }
        });

        MovieNameField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        MovieNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MovieNameFieldActionPerformed(evt);
            }
        });

        RatingMovie.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        RatingMovie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RatingMovieActionPerformed(evt);
            }
        });

        Refresh.setBackground(new java.awt.Color(102, 204, 255));
        Refresh.setText("Tải Lại");
        Refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RefreshActionPerformed(evt);
            }
        });

        jLabel1.setText("Tên Phim");

        jLabel2.setText("Điểm đánh giá");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(anouncement, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(SubmitButton)
                        .addGap(8, 8, 8))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ReturnButton)
                    .addComponent(RatingMovie, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MovieNameField)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(28, 28, 28))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(anouncement)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(MovieNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(RatingMovie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addComponent(ReturnButton)
                        .addGap(28, 28, 28))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Refresh)
                            .addComponent(SubmitButton))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void RatingMovieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RatingMovieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RatingMovieActionPerformed

    private void MovieNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MovieNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MovieNameFieldActionPerformed

    private void RefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RefreshActionPerformed
        // TODO add your handling code here:
        defaultTableModel.setRowCount(0);
        
        String movieNameFill = MovieNameField.getText();
        String rating = RatingMovie.getText();
        if(!"".equals(rating) && "".equals(movieNameFill))
        {
            float movieRating = Float.parseFloat(RatingMovie.getText());
            array = movieDao.getMovieByHigherRating(movieRating);
            for (Movie x : array)
            {
                defaultTableModel.addRow(new Object[]{
                            x.getMovieId() , x.getMovieName() , x.getDescript() , x.getMovieLength() , x.getMovieLanguage() , 
                            x.getRating()
                });
            }
            
            
            if (array.isEmpty())
            {
                anouncement.setText("Không có bộ phim nào phù hợp!");
            }
            else
                anouncement.setText("Vui lòng chọn một bộ phim bên dưới!");
        }
        else if(!"".equals(movieNameFill) && "".equals(rating))
        {
            array = movieDao.getMovieByName(movieNameFill);
            for (Movie x : array)
            {
                defaultTableModel.addRow(new Object[]{
                            x.getMovieId() , x.getMovieName() , x.getDescript() , x.getMovieLength() , x.getMovieLanguage() , 
                            x.getRating()
                });
            }
            
            if (array.isEmpty())
            {
                anouncement.setText("Không có bộ phim nào phù hợp!");
            }
            else
                anouncement.setText("Vui lòng chọn một bộ phim bên dưới!");
        }
        else if ("".equals(movieNameFill) && "".equals(rating))
        {
            anouncement.setText("Không có bộ phim nào phù hợp!");
        }
        else
        {
            float movieRating = Float.parseFloat(RatingMovie.getText());
            array = movieDao.getMovieByNameAndRating(movieNameFill , movieRating);
            for (Movie x : array)
            {
                defaultTableModel.addRow(new Object[]{
                            x.getMovieId() , x.getMovieName() , x.getDescript() , x.getMovieLength() , x.getMovieLanguage() , 
                            x.getRating()
                });
            }    
            if (array.isEmpty())
            {
                anouncement.setText("Không có bộ phim nào phù hợp!");
            }
            else
                anouncement.setText("Vui lòng chọn một bộ phim bên dưới!");
        }
    }//GEN-LAST:event_RefreshActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed
        // TODO add your handling code here:
        if (Table.getSelectedRow() != -1)
        {
            int selectedRow = Table.getSelectedRow();
            
            int MovieId = (int) Table.getValueAt(selectedRow, 0);
            String movieName = (String) Table.getValueAt(selectedRow, 1);
            String descript = (String) Table.getValueAt(selectedRow, 2);
            float movieLength = (float)Table.getValueAt(selectedRow , 3);
            String movieLanguage = (String) Table.getValueAt(selectedRow, 4);
            float rating = (float) Table.getValueAt(selectedRow, 5);
            
            
            //set Movie for addSchedule object
            addSchedule.setMovie(new Movie(MovieId , movieName , descript , movieLength , movieLanguage , rating));
            
            dispose();
            new ChoiceRoomFrm(addSchedule).setVisible(true);            
        }
        else
        {
            anouncement.setText("Vui lòng chọn một bộ phim bên dưới trước khi tiếp tục!");
        }

        
    }//GEN-LAST:event_SubmitButtonActionPerformed

    private void ReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnButtonActionPerformed
        // TODO add your handling code here:
        dispose();
        new ManagementFrm(addSchedule).setVisible(true);
    }//GEN-LAST:event_ReturnButtonActionPerformed
    
    private MovieDAO movieDao;
    private ArrayList<Movie> array;
    DefaultTableModel defaultTableModel;
    private AddSchedule addSchedule;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField MovieNameField;
    private javax.swing.JTextField RatingMovie;
    private javax.swing.JButton Refresh;
    private javax.swing.JButton ReturnButton;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JTable Table;
    private javax.swing.JLabel anouncement;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
